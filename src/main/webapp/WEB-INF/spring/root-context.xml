<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
   xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
   xmlns:tx="http://www.springframework.org/schema/tx"
   xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.3.xsd
      http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd
      http://www.springframework.org/schema/jdbc http://www.springframework.org/schema/jdbc/spring-jdbc-4.3.xsd">


   <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource"               destroy-method="close"> 
      <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver"/> 
      <property name="url" value="jdbc:oracle:thin:@127.0.0.1:1521:xe" /> 
      <property name="username" value="c##KGPARK"/> 
      <property name="password" value="1234"/> 
   </bean>
   
   <!-- SqlSessionFactory --> <!-- mybatis config --><!-- mapper -->
   <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
      <property name="dataSource" ref="dataSource" />
      <property name="configLocation" value="classpath:/mybatis-config.xml" />
      <property name="mapperLocations" value="classpath:/mapper/*.xml" />
   </bean>								<!-- Mapper_book 이런식으로 mapper 에서 작업 -->
   
   
   <!-- SqlSessionTemplate :  mybatis-spring  -->
   <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate" > 
      <constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory" /> 
   </bean>
   
   <!-- mapper interface  -->
   <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
      <property name="basePackage" value="com.water.park.service.dao" /> 
   </bean>
   
   
   <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager"> 
      <property name="dataSource" ref="dataSource" /> 
   </bean>
     
      <bean id="bcyptPasswordEncoder"
   			class="org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder"/>
   
   <tx:annotation-driven transaction-manager="transactionManager"/> 

      <!--  ㄴ 위에 기능
      @Transactional <<
      public void someTransactionalMethod() {
          // 데이터베이스 작업 수행
         }

       -->



</beans>


